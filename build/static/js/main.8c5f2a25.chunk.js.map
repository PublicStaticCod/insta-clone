{"version":3,"sources":["firebase.js","Post.js","axios.js","ImageUpload.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","Post","forwardRef","ref","user","username","postId","imageUrl","caption","useState","comments","setComments","comment","setComment","useEffect","unsubscribe","collection","doc","onSnapshot","snapshot","docs","map","data","className","Avatar","alt","src","text","type","placeholder","value","onChange","e","target","disabled","onClick","preventDefault","add","displayName","instance","axios","create","baseURL","ImageUpload","image","setImage","setUrl","progress","setProgress","setCaption","max","Input","files","Button","name","put","on","Math","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","url","post","timestamp","FieldValue","serverTimestamp","Footer","Component","getModalStyle","height","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","classes","modalStyle","posts","setPosts","setUsername","email","setEmail","password","setPassword","setUser","open","setOpen","registerOpen","setRegisterOpen","onAuthStateChanged","authUser","updateProfile","fetchPosts","a","get","response","Pusher","cluster","subscribe","bind","forEach","Modal","onClose","style","signInWithEmailAndPassword","catch","alert","message","createUserWithEmailAndPassword","signOut","key","_id","maxWidth","hideCaption","containerTagName","protocol","injectScript","onLoading","onSuccess","onAfterRender","onFailure","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8c5f2a25.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n\tapiKey: 'AIzaSyBoP1rM9W0odigUIsubISBQ-m5IQiDWXTU',\n\tauthDomain: 'mern-instagram-5ca63.firebaseapp.com',\n\tdatabaseURL: 'https://mern-instagram-5ca63.firebaseio.com',\n\tprojectId: 'mern-instagram-5ca63',\n\tstorageBucket: 'mern-instagram-5ca63.appspot.com',\n\tmessagingSenderId: '636514122857',\n\tappId: '1:636514122857:web:5656b869e5ca2b15a1b6f8',\n\tmeasurementId: 'G-8FM68ZXJ32',\n});\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n\nexport { db, auth, storage };\n","import React, { useState, useEffect, forwardRef } from 'react';\nimport './Post.css';\nimport Avatar from '@material-ui/core/Avatar';\nimport { db } from './firebase';\nimport firebase from 'firebase';\n\nconst Post = forwardRef(\n\t({ user, username, postId, imageUrl, caption }, ref) => {\n\t\tconst [comments, setComments] = useState([]);\n\t\tconst [comment, setComment] = useState('');\n\n\t\tuseEffect(() => {\n\t\t\tlet unsubscribe;\n\t\t\tif (postId) {\n\t\t\t\tunsubscribe = db\n\t\t\t\t\t.collection('posts')\n\t\t\t\t\t.doc(postId)\n\t\t\t\t\t.collection('comments')\n\t\t\t\t\t.onSnapshot((snapshot) => {\n\t\t\t\t\t\tsetComments(snapshot.docs.map((doc) => doc.data()));\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn () => {\n\t\t\t\tunsubscribe();\n\t\t\t};\n\t\t}, [postId]);\n\n\t\tconst postComment = (e) => {\n\t\t\te.preventDefault();\n\n\t\t\tdb.collection('posts').doc(postId).collection('comments').add({\n\t\t\t\ttext: comment,\n\t\t\t\tusername: user.displayName,\n\t\t\t});\n\t\t\tsetComment('');\n\t\t};\n\n\t\treturn (\n\t\t\t<div className='post effect' ref={ref}>\n\t\t\t\t<div className='post__header'>\n\t\t\t\t\t<Avatar\n\t\t\t\t\t\tclassName='post__avatar'\n\t\t\t\t\t\talt={username}\n\t\t\t\t\t\tsrc='/static/images/avatar/1.jpg'\n\t\t\t\t\t/>\n\t\t\t\t\t<h3>{username}</h3>\n\t\t\t\t</div>\n\n\t\t\t\t<img className='post__image' src={imageUrl} alt='post' />\n\t\t\t\t<h4 className='post__text'>\n\t\t\t\t\t{username} <span className='post__caption'>{caption}</span>\n\t\t\t\t</h4>\n\n\t\t\t\t<div className='post__comments'>\n\t\t\t\t\t{comments.map((comment) => (\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<b>{comment.username}</b> {comment.text}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\n\t\t\t\t{user && (\n\t\t\t\t\t<form className='post__commentBox'>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName='post__input'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tplaceholder='Add a comment...'\n\t\t\t\t\t\t\tvalue={comment}\n\t\t\t\t\t\t\tonChange={(e) => setComment(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tdisabled={!comment}\n\t\t\t\t\t\t\tclassName='post__button'\n\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\tonClick={postComment}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tPost\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</form>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n);\n\nexport default Post;\n","import axios from 'axios';\n\nconst instance = axios.create({\n\tbaseURL: 'https://instagram-backend-mern.herokuapp.com/',\n});\n\nexport default instance;\n","import React, { useState } from 'react';\nimport firebase from 'firebase';\nimport { storage, db } from './firebase';\nimport './ImageUpload.css';\nimport { Input, Button } from '@material-ui/core';\nimport axios from './axios';\n\nconst ImageUpload = ({ username }) => {\n\tconst [image, setImage] = useState(null);\n\tconst [url, setUrl] = useState('');\n\tconst [progress, setProgress] = useState(0);\n\tconst [caption, setCaption] = useState('');\n\n\tconst handleChange = (e) => {\n\t\tif (e.target.files[0]) {\n\t\t\tsetImage(e.target.files[0]);\n\t\t}\n\t};\n\n\tconst handleUpload = () => {\n\t\tconst uploadTask = storage.ref(`images/${image.name}`).put(image);\n\t\tuploadTask.on(\n\t\t\t'state_changed',\n\t\t\t(snapshot) => {\n\t\t\t\t// progress function ...\n\t\t\t\tconst progress = Math.round(\n\t\t\t\t\t(snapshot.bytesTransferred / snapshot.totalBytes) * 100\n\t\t\t\t);\n\t\t\t\tsetProgress(progress);\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\t// Error function ...\n\t\t\t\tconsole.log(error);\n\t\t\t},\n\t\t\t() => {\n\t\t\t\t// complete function ...\n\t\t\t\tstorage\n\t\t\t\t\t.ref('images')\n\t\t\t\t\t.child(image.name)\n\t\t\t\t\t.getDownloadURL()\n\t\t\t\t\t.then((url) => {\n\t\t\t\t\t\tsetUrl(url);\n\n\t\t\t\t\t\taxios.post('/upload', {\n\t\t\t\t\t\t\tcaption: caption,\n\t\t\t\t\t\t\tuser: username,\n\t\t\t\t\t\t\timage: url,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// post image inside db\n\t\t\t\t\t\tdb.collection('posts').add({\n\t\t\t\t\t\t\timageUrl: url,\n\t\t\t\t\t\t\tcaption: caption,\n\t\t\t\t\t\t\tusername: username,\n\t\t\t\t\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp(),\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tsetProgress(0);\n\t\t\t\t\t\tsetCaption('');\n\t\t\t\t\t\tsetImage(null);\n\t\t\t\t\t});\n\t\t\t}\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className='imageupload'>\n\t\t\t<progress className='imageupload__progress' value={progress} max='100' />\n\t\t\t<Input\n\t\t\t\tplaceholder='Enter a caption'\n\t\t\t\tvalue={caption}\n\t\t\t\tonChange={(e) => setCaption(e.target.value)}\n\t\t\t/>\n\t\t\t<div>\n\t\t\t\t<input type='file' onChange={handleChange} />\n\t\t\t\t<Button className='imageupload__button' onClick={handleUpload}>\n\t\t\t\t\tUpload\n\t\t\t\t</Button>\n\t\t\t</div>\n\n\t\t\t<br />\n\t\t</div>\n\t);\n};\n\nexport default ImageUpload;\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<footer className='footer'>\n\t\t\t\tWith a Love of Instagram & React <span>❤️</span>{' '}\n\t\t\t</footer>\n\t\t);\n\t}\n}\n\nexport default Footer;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Post from './Post';\nimport ImageUpload from './ImageUpload';\nimport { db, auth } from './firebase';\nimport { Button, Avatar, makeStyles, Modal, Input } from '@material-ui/core';\nimport FlipMove from 'react-flip-move';\nimport InstagramEmbed from 'react-instagram-embed';\nimport axios from './axios';\nimport Pusher from 'pusher-js';\nimport Footer from './Footer';\n\nfunction getModalStyle() {\n\tconst top = 50;\n\tconst left = 50;\n\n\treturn {\n\t\theight: '300px',\n\t\ttop: `${top}%`,\n\t\tleft: `${left}%`,\n\t\ttransform: `translate(-${top}%, -${left}%)`,\n\t};\n}\n\nconst useStyles = makeStyles((theme) => ({\n\tpaper: {\n\t\tposition: 'absolute',\n\t\twidth: 400,\n\t\theight: 200,\n\t\tbackgroundColor: theme.palette.background.paper,\n\t\tborder: '2px solid #000',\n\t\tboxShadow: theme.shadows[5],\n\t\tpadding: theme.spacing(2, 4, 3),\n\t},\n}));\n\nfunction App() {\n\tconst classes = useStyles();\n\tconst [modalStyle] = useState(getModalStyle);\n\tconst [posts, setPosts] = useState([]);\n\tconst [username, setUsername] = useState('');\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [user, setUser] = useState(null);\n\tconst [open, setOpen] = useState(false);\n\tconst [registerOpen, setRegisterOpen] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst unsubscribe = auth.onAuthStateChanged((authUser) => {\n\t\t\tif (authUser) {\n\t\t\t\t// user is logged in...\n\t\t\t\tconsole.log(authUser);\n\t\t\t\tsetUser(authUser);\n\n\t\t\t\tif (authUser.displayName) {\n\t\t\t\t\t// dont update username\n\t\t\t\t} else {\n\t\t\t\t\treturn authUser.updateProfile({\n\t\t\t\t\t\tdisplayName: username,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetUser(null);\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tunsubscribe();\n\t\t};\n\t}, [user, username]);\n\n\tconst fetchPosts = async () =>\n\t\tawait axios.get('/sync').then((response) => {\n\t\t\tconsole.log(response);\n\t\t\tsetPosts(response.data);\n\t\t});\n\n\t// for pusher.js\n\tuseEffect(() => {\n\t\tconst pusher = new Pusher('cdb63ed34a544275f43b', {\n\t\t\tcluster: 'ap2',\n\t\t});\n\n\t\tconst channel = pusher.subscribe('posts');\n\t\tchannel.bind('inserted', function (data) {\n\t\t\tconsole.log('data recieved', data);\n\t\t\tfetchPosts();\n\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\tfetchPosts();\n\t}, []);\n\n\t// Debugging Stuff\n\tconsole.log('posts are >>>', posts);\n\tposts.forEach((post) => {\n\t\tconsole.log('post >>> ', post);\n\t});\n\n\tconst handleLogin = (e) => {\n\t\te.preventDefault();\n\t\tauth\n\t\t\t.signInWithEmailAndPassword(email, password)\n\t\t\t.catch((error) => alert(error.message));\n\n\t\tsetOpen(false);\n\t};\n\n\tconst handleRegister = (e) => {\n\t\te.preventDefault();\n\t\tauth\n\t\t\t.createUserWithEmailAndPassword(email, password)\n\t\t\t.catch((error) => alert(error.message));\n\n\t\tsetRegisterOpen(false);\n\t};\n\n\treturn (\n\t\t<div className='app'>\n\t\t\t<Modal open={open} onClose={() => setOpen(false)}>\n\t\t\t\t<div style={modalStyle} className={classes.paper}>\n\t\t\t\t\t<form className='app__login'>\n\t\t\t\t\t\t<center>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName='app__headerImage'\n\t\t\t\t\t\t\t\tsrc='https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png'\n\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</center>\n\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tplaceholder='email'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tplaceholder='password'\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button onClick={handleLogin}>Login</Button>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\n\t\t\t<Modal open={registerOpen} onClose={() => setRegisterOpen(false)}>\n\t\t\t\t<div style={modalStyle} className={classes.paper}>\n\t\t\t\t\t<form className='app__login '>\n\t\t\t\t\t\t<center>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName='app__headerImage'\n\t\t\t\t\t\t\t\tsrc='https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png'\n\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</center>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tplaceholder='username'\n\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t\tonChange={(e) => setUsername(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tplaceholder='email'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tplaceholder='password'\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button onClick={handleRegister}>Register</Button>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t\t<div className='app__header effect_header'>\n\t\t\t\t<img\n\t\t\t\t\tclassName='app__headerImage'\n\t\t\t\t\tsrc='https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png'\n\t\t\t\t\talt=''\n\t\t\t\t/>\n\t\t\t\t{user?.displayName ? (\n\t\t\t\t\t<div className='app__headerRight'>\n\t\t\t\t\t\t<Button onClick={() => auth.signOut()}>Logout</Button>\n\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\tclassName='app__headerAvatar'\n\t\t\t\t\t\t\talt={user.displayName}\n\t\t\t\t\t\t\tsrc='/static/images/avatar/1.jpg'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<form className='app__loginHome effect_loginBOX'>\n\t\t\t\t\t\t<Button onClick={() => setOpen(true)}>Login</Button>\n\t\t\t\t\t\t<Button onClick={() => setRegisterOpen(true)}>Sign Up</Button>\n\t\t\t\t\t</form>\n\t\t\t\t)}\n\t\t\t</div>\n\n\t\t\t<div className='app__posts'>\n\t\t\t\t<div className='app__postsLeft'>\n\t\t\t\t\t<FlipMove>\n\t\t\t\t\t\t{posts.map((post) => (\n\t\t\t\t\t\t\t<Post\n\t\t\t\t\t\t\t\tuser={user}\n\t\t\t\t\t\t\t\tkey={post._id}\n\t\t\t\t\t\t\t\tpostId={post._id}\n\t\t\t\t\t\t\t\tusername={post.user}\n\t\t\t\t\t\t\t\tcaption={post.caption}\n\t\t\t\t\t\t\t\timageUrl={post.image}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</FlipMove>\n\t\t\t\t</div>\n\t\t\t\t<div className='app__postsRight effect'>\n\t\t\t\t\t<InstagramEmbed\n\t\t\t\t\t\turl='https://www.instagram.com/p/B_uf9dmAGPw/'\n\t\t\t\t\t\tmaxWidth={320}\n\t\t\t\t\t\thideCaption={false}\n\t\t\t\t\t\tcontainerTagName='div'\n\t\t\t\t\t\tprotocol=''\n\t\t\t\t\t\tinjectScript\n\t\t\t\t\t\tonLoading={() => {}}\n\t\t\t\t\t\tonSuccess={() => {}}\n\t\t\t\t\t\tonAfterRender={() => {}}\n\t\t\t\t\t\tonFailure={() => {}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{user?.displayName ? (\n\t\t\t\t<div className='app__upload effect'>\n\t\t\t\t\t<ImageUpload username={user.displayName} />\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<center>\n\t\t\t\t\t<h3>LOGIN TO UPLOAD</h3>\n\t\t\t\t</center>\n\t\t\t)}\n\t\t\t<div className='Footer'>\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}